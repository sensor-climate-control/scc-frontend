# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy Node.js app to Azure Web App - osuscc

on:
  push:
    branches:
      - testing
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Node.js version
        uses: actions/setup-node@v1
        with:
          node-version: '18.x'

      - name: npm install, build, and test
        env:
          REACT_APP_BASEURL: "https://osuscc-testing.azurewebsites.net"
        run: |
          npm install
          npm run build --if-present
          npm run test --if-present

      - name: create .env file
        shell: bash
        env:
          MONGODB_URL: ${{ secrets.MONGODB_URL }}
          AIRNOW_API_KEY: ${{ secrets.AIRNOW_API_KEY }}
          OWM_API_KEY: ${{ secrets.OWM_API_KEY }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          SMTP_HOST: ${{ secrets.SMTP_HOST }}
          SMTP_PORT: ${{ secrets.SMTP_PORT }}
          SMTP_USER: ${{ secrets.SMTP_USER }}
          SMTP_PASS: ${{ secrets.SMTP_PASS }}
          SMTP_FROM: ${{ secrets.SMTP_FROM }}
        run: |
          echo MONGO_DB_NAME="dev" >> .env
          echo MONGO_URL="$MONGODB_URL" >> .env
          echo OWM_API_KEY="$OWM_API_KEY" >> .env
          echo AIRNOW_API_KEY="$AIRNOW_API_KEY" >> .env
          echo JWT_SECRET="$JWT_SECRET" >> .env
          echo SMTP_HOST="\"$SMTP_HOST\"" >> .env
          echo SMTP_PORT="\"$SMTP_PORT\"" >> .env
          echo SMTP_USER="\"$SMTP_USER\"" >> .env
          echo SMTP_PASS="\"$SMTP_PASS\"" >> .env
          echo SMTP_FROM="\"$SMTP_FROM\"" >> .env

      - name: compress node_modules for faster upload
        run: |
          tar -cvf node_modules.tar ./node_modules
          rm -rf ./node_modules

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v2
        with:
          name: node-app
          path: .

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'testing'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: node-app

      - name: untar node_modules for deployment
        run: tar -xvf node_modules.tar

      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'osuscc'
          slot-name: 'testing'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_A9CC283E53C14E13AA6F7FDEC951B570 }}
          package: .
